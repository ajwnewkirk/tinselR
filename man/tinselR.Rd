% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tinselR.R
\docType{package}
\name{tinselR}
\alias{tinselR}
\title{tinselR: An R Shiny Application for annotating outbreak phylogenetic trees}
\description{
This is a phylogenetic tree application for annotating trees with additional
information. Additional information could come from a genetic distance file or
meta data file.
}
\section{tinselR modules}{

The modules of tinselR are described below:

mod_about -  this module generates the landing page for the application and
provides a link to the github repo where users may file an issue.
 
mod_aboutExample -  this module generates the tab detailing the example data
that is pre-loaded when the application launches.

mod_aboutTreeParams - this module generates the landing page which describes
the tree parameters that a user can adjust.

mod_cladeAnnotator - this module allows the user to add or remove annotations
and checks for overlap between those annotations and allows the addition of
the heatmap. The final annotated tree is sent to the downloadTree module for
downloading. This module uses 6 functions: create_tip_list, make_layer,
add_map, add_annotations, current_tree_out and snp_anno.

mod_displayTree - this module combines the tree with genetic distance that 
allows tree plotting and accessing the combined genetic data for adding
annotations. This module uses 2 functions: tree_plot and combine_g_and_t.

mod_exampleData -  this module sources the pre-loaded example data (e.g. tree
(x3), genetic distance file (x3), and meta data file (x3)), which are already
combined as a dataset (e.g. example data 1 is the combined data files of 
example tree 1, example genetic 1, and example meta 1). This module uses 3
functions: replace_column_header, gene_object_out, m_file_conversion.

mod_FAQ - this module generates the tab for a frequently asked questions
section.

mod_paramsTree - this module holds all of the parameters that can be
adjusted for the phylogenetic tree and ultimately are passed to either the 
displayTree or cladeAnnotator module.

mod_pushButtons - this module generates the action buttons for adding a tree,
adding/removing a tree, or adding/removing a heatmap.

mod_relaunchApp - this module will relaunch the entire application and clear
out any exisiting tree images that are plotted.

mod_tipCheck - this module generates messages for the user regarding the 
files uploaded and if column(s) for a heatmap is available. This module uses
3 functions: sanity, not_columns, and m_file_conversion.

mod_uploadData - this module allows the user to upload three different types
of files and does file checking to confirm the correct delimiter is selected.
The output from this module is sent to three different modules (tipCheck, 
displayTree, and cladeAnnotator). This module uses 5 server functions: 
read_data, file_type, file_check, replace_column_header, gene_object_out.
This module uses 2 ui functions: file_upload and input_separator.
}

\section{tinselR functions}{

The functions of tinselR are described below:
}

\section{tinselR utils server functions}{

The functions that are shared between modules or unit testing are included
in file called goelm_utils_server.R We describe those functions below and 
indicated where these functions are called.

sanity - Inputs: m_file, g_file, t_file - which are the three different
file types a user can upload and are imported (meta, file, genetic distance 
file, and a tree file). g_file class - spec_tbl_df, tbl_df, tbl, data.frame; 
m_file class - spec_tbl_df, tbl_df, tbl, data.frame; t_file class - phylo.
Output: ui displayed messages indicating if the files are concordant in tip
labels and informing the user where an inconsistency is in tip labels for the
three files. Used in tipcheck module and unit tests.

not_columns - Input: file - this file is the meta data file that has been
converted using the function m_file conversion. file class - spec_tbl_df, 
tbl_df, tbl, data.frame. Output: ui displayed message that tells user if
there is a column included that allows the user to add a heatmap. Used in
tipcheck module and unit tests.

replace_column_header - Inputs: gene_file_in - this is the genetic distance 
file which is imported. gene_file_in class - spec_tbl_df, tbl_df, tbl,
data.frame. Output: spec_tbl_df, tbl_df, tbl, data.frame with row 1, column 1
changed to 'label', which is done for joining this file with the tree file.
Used in uploadData and exampleData module.

gene_object_out - Inputs: gene_file_in - this is the genetic distance 
file which is imported. gene_file_in class - spec_tbl_df, tbl_df, tbl,
data.frame. Output: spec_tbl_df, tbl_df, tbl, data.frame. Essentially, this
converts the matrix to a three column data frame (isolate 1, isolate 2, and 
pairwise snp differences between them). It also removes rows with na and self
comparisons as that would skew the calculation of mean snps. Used in
uploadData and exampleData module.

m_file_conversion - Input: m_file - this file is the meta data file that has 
been converted using the function m_file conversion. m_file class - 
spec_tbl_df, tbl_df, tbl, data.frame. Output: meta data file with converted
tips labels to row names and the removal of the original tip labels that you
a user is correcting for. used in tipCheck and exampleData modules. 

combine_g_and_t - Inputs: tree_file and gene_file - these files are used 
to be combined by the shared id of label. gene_file class - spec_tbl_df,
tbl_df, tbl, data.frame; t_file class - phylo. Output - a tibble that
will be converted to a treedata object. Used in displayData module and 
unit tests. 

snp_anno - Inputs: gene_file and tips - gene_file is the converted three 
column genetic distance file; while the tips input all user selected tips. 
gene_file class - spec_tbl_df, tbl_df, tbl, data.frame; tips class - list. 
Output: is a numeric vector of snp differences for the selection of
highlighted tips. Used in the cladeAnnotator module and unit tests.
}

\section{tinselR module specific functions}{

The functions that are only used in specific modules are defined in those
modules. We describe those functions below and indicated the modules these
functions are associated with.
}

